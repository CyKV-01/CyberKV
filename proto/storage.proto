syntax = "proto3";

package kvs;
option go_package = "github.com/CyKV-01/CyberKV/proto";

import "version.proto";

service Storage {
    // Coordinator to storage nodes
    rpc CompactMemTable(CompactMemTableRequest) returns (CompactMemTableResponse) {}
    rpc Compact(CompactRequest) returns (CompactResponse) {}

    // Storage nodes to leader storage node
    rpc PushMemTable(PushMemTableRequest) returns (PushMemTableResponse) {}
}

message KvData {
    string key = 1;
    string value = 2;
    uint64 timestamp = 3;
}

message BlockHandle {
    string key = 1;
    uint64 offset = 2;
}

message Index {
    repeated BlockHandle block_handles = 1;
}

message CompactMemTableRequest {
    uint64 leader = 1;
    string leader_addr = 2;
    int32 slot = 3;
    uint64 timestamp = 4;
}

message CompactMemTableResponse {
    repeated version.SSTableLevel created_sstables = 1;
    repeated version.SSTableLevel deleted_sstables = 2;
}

message CompactRequest {
    int32 level = 1;
    repeated string sstables = 2;
}

message CompactResponse {
    repeated version.SSTableLevel created_sstables = 1;
    repeated version.SSTableLevel deleted_sstables = 2;
}

message PushMemTableRequest {
    int32 slot = 1;
    repeated KvData data = 2;
}

message PushMemTableResponse {
}